version: '3.4'

networks:
  connectivity:
    external:
      name: connectivity
  vault:
    driver: overlay

secrets:
  aws-key:
    file: ./secrets/aws-key
  aws-secret:
    file: ./secrets/aws-secret
  swarm-ca:
    file: ./secrets/swarm-ca
  swarm-key:
    file: ./secrets/swarm-key
  swarm-cert:
    file: ./secrets/swarm-cert


volumes:
  vault-server:
    driver: local
    driver_opts:
      type: nfs
      o: addr=nas.hutter.cloud,rw,nolock,async
      device: ":/volume1/docker/vault-vault-server"
  vault-traefik:
    driver: local
    driver_opts:
      type: nfs
      o: addr=nas.hutter.cloud,rw,nolock,async
      device: ":/volume1/docker/vault-traefik"

services:
  traefik:
    image:  sebastianhutter/traefik:vault
    networks:
      - connectivity
      - vault
    environment:
      AWS_REGION: eu-central-1
      AWS_HOSTED_ZONE_ID: Z3CBRYU3UXXFKT
    ports:
      - 8200:8200/tcp
      - 12002:8080/tcp
    volumes:
      - vault-traefik:/acme
    secrets:
      - aws-key
      - aws-secret
      - swarm-ca
      - swarm-cert
      - swarm-key
    command: --constraints="tag==vault"

  vault-server:
    cap_add:
    - IPC_LOCK
    image: vault
    environment:
      VAULT_LOCAL_CONFIG: '{ "backend": { "file": { "path": "/vault/hutter.cloud"
        } }, "listener": { "tcp": { "address": "0.0.0.0:8200", "tls_disable": true } }, "default_lease_ttl":
        "168h", "max_lease_ttl": "720h", "disable_mlock": true }'
    stdin_open: true
    volumes:
      - vault-server:/vault
    networks:
      - vault
    tty: true
    command:
      - vault
      - server
      - -config
      - /vault/config
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.tags=vault"
        - "traefik.backend=vault-server"
        - "traefik.frontend.entryPoints=https"
        - "traefik.frontend.rule=Host:vault.hutter.cloud"
        - "traefik.protocol=http"
        - "traefik.docker.network=vault"
        - "traefik.port=8200"